{"ast":null,"code":"var _jsxFileName = \"/home/work/Desktop/flask_work/true_userlist/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport \"./App.css\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserData = ({\n  id\n}) => {\n  _s();\n  //console.log(\"email: \" + user.email);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [org, setOrg] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [city, setCity] = useState(null);\n  const [locstate, setLocState] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [postal, setPostal] = useState(null);\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/userDetails/\" + String(id));\n        //something similar to await fetch to do post\n        //console.log(response);\n        if (!response.ok) {\n          throw new Error(\"failed to fetch details\");\n        }\n        const resp = await response.json();\n        const data = JSON.parse(JSON.stringify(resp));\n        //console.log(data);\n        setUsername(data[0].username);\n        setEmail(data[0].email);\n        setOrg(data[0].organization);\n        setAddress(data[0].address);\n        setCity(data[0].city);\n        setLocState(data[0].state);\n        setCountry(data[0].country);\n        setPostal(data[0].postalcode);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (id) {\n      fetchUserDetails();\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: org\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: locstate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: postal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(UserData, \"dSqwV5QGkEmSxB2P5ANNuKSRh7Y=\");\n_c = UserData;\nconst UserList = ({\n  users\n}) => {\n  _s2();\n  const [selectedUserId, setSelectedUserId] = useState(false);\n  const [rowData, setRowData] = useState(users);\n  const [editData, setEditData] = useState({});\n  const handleUserClick = id => {\n    if (selectedUserId && selectedUserId === id) {\n      setSelectedUserId(null);\n    } else {\n      setSelectedUserId(id);\n    }\n    console.log(selectedUserId);\n    console.log(id);\n  };\n  const getRows = () => {\n    return rowData.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row_grid\",\n          children: !(selectedUserId === user.id) && /*#__PURE__*/_jsxDEV(UserData, {\n            id: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inline_grid\",\n          onClick: () => {\n            handleUserClick(user.id);\n          },\n          children: [\"Edit \", user.username, \" data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this);\n    });\n  };\n  //<div class=\"inline_grid\" onClick={() => {handleUserClick(user.id);}}><button >Edit {user.username} data</button></div>\n  //.id or .username?\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: \"Username:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: \"Organization:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: \"Address:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: \"City:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: \"State:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: \"Country:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: \"Postal Code:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"inline_grid\",\n      children: \"Edit:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: getRows(users)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n\n//how to tell it that once adduser has been done, have to useeffect again....\n//should adduser be here?\n\n//needs to be able to change display if the database is updated\n// ^look smth up with this\n_s2(UserList, \"nCm9x6zertE1b/kK2hqLqnaWXKU=\");\n_c2 = UserList;\nconst App = () => {\n  _s4();\n  var _s3 = $RefreshSig$();\n  const [users, setUsers] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userAdded, setUserAdded] = useState(false);\n  const [addUsr, setAddUsr] = useState(false);\n  console.log(\"adduser is \" + addUsr);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/userlist\");\n        if (!response.ok) {\n          throw new Error('failed to fetch users');\n        }\n        const data = await response.json();\n        console.log(data);\n        setUsers(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (userAdded) {\n      setUserAdded(!userAdded);\n      fetchUsers();\n    }\n    fetchUsers();\n  }, [post]);\n  const AddNewUser = () => {\n    _s3();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [user, setUser] = useState(null);\n    const [pass, setPass] = useState(null);\n    const [email, setEmail] = useState(null);\n    const [org, setOrg] = useState(null);\n    const [address, setAddress] = useState(null);\n    const [city, setCity] = useState(null);\n    const [locstate, setLocState] = useState(null);\n    const [country, setCountry] = useState(null);\n    const [postal, setPostal] = useState(null);\n    let userDetails = [{\n      username: {\n        user\n      }\n    }, {\n      password: {\n        pass\n      }\n    }, {\n      email: {\n        email\n      }\n    }, {\n      organization: {\n        org\n      }\n    }, {\n      address: {\n        address\n      }\n    }, {\n      city: {\n        city\n      }\n    }, {\n      state: {\n        locstate\n      }\n    }, {\n      country: {\n        country\n      }\n    }, {\n      postalcode: {\n        postal\n      }\n    }];\n\n    //!!!\n\n    const handleSubmit = async event => {\n      console.log(\"submit pressed\");\n      setAddUsr(!addUsr);\n      console.log(\"adduser is \" + addUsr);\n      event.preventDefault();\n      const settings = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user,\n          pass,\n          email,\n          org,\n          address,\n          city,\n          locstate,\n          country,\n          postal\n        })\n      };\n      try {\n        const fetchResponse = await fetch('http://127.0.0.1:5000/addNewUser/', settings);\n        const data = await fetchResponse.json();\n        return data;\n      } catch (e) {\n        return e;\n      }\n    };\n    if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 31\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 27\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        action: \"/post\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inline_grid\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"user\",\n            label: \"Username:\",\n            onChange: e => setUser(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inline_grid\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            label: \"Email:\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inline_grid\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"org\",\n            label: \"Organization:\",\n            onChange: e => setOrg(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inline_grid\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"address\",\n            label: \"Address:\",\n            onChange: e => setAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inline_grid\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"city\",\n            label: \"City:\",\n            onChange: e => setCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inline_grid\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"locstate\",\n            label: \"State:\",\n            onChange: e => setLocState(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inline_grid\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"country\",\n            label: \"Country:\",\n            onChange: e => setCountry(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inline_grid\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"postal\",\n            label: \"Postalcode:\",\n            onChange: e => setPostal(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inline_grid\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn\",\n            value: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this);\n  };\n  _s3(AddNewUser, \"RN3aR+ZCMFW8CyiTMWvRAGLvM1E=\");\n  const AddUser = () => {\n    const handleUserClick = () => {\n      if (addUsr === true) {\n        setUserAdded(true);\n        console.log(\"adduser is \" + addUsr);\n      }\n      setAddUsr(!addUsr);\n      console.log(\"adduser is \" + addUsr);\n      //console.log(\"add user button pressed\");\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUserClick,\n        type: \"button\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this), addUsr && /*#__PURE__*/_jsxDEV(AddNewUser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this);\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 9\n  }, this);\n};\n_s4(App, \"/Fcoa+GEHW0uzW1DST5WECI6pZQ=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserData\");\n$RefreshReg$(_c2, \"UserList\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","TextField","jsxDEV","_jsxDEV","UserData","id","_s","isLoading","setIsLoading","error","setError","username","setUsername","email","setEmail","org","setOrg","address","setAddress","city","setCity","locstate","setLocState","country","setCountry","postal","setPostal","fetchUserDetails","response","fetch","String","ok","Error","resp","json","data","JSON","parse","stringify","organization","state","postalcode","err","message","children","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","UserList","users","_s2","selectedUserId","setSelectedUserId","rowData","setRowData","editData","setEditData","handleUserClick","console","log","getRows","map","user","onClick","_c2","App","_s4","_s3","$RefreshSig$","setUsers","userAdded","setUserAdded","addUsr","setAddUsr","fetchUsers","post","AddNewUser","setUser","pass","setPass","userDetails","password","handleSubmit","event","preventDefault","settings","method","headers","body","fetchResponse","e","action","onSubmit","label","onChange","target","value","type","className","AddUser","_c3","$RefreshReg$"],"sources":["/home/work/Desktop/flask_work/true_userlist/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport TextField from '@mui/material/TextField';\n\nconst UserData = ({id}) => {\n    //console.log(\"email: \" + user.email);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const [username, setUsername] = useState(null);\n    const [email, setEmail] = useState(null);\n    const [org, setOrg] = useState(null);\n    const [address, setAddress] = useState(null);\n    const [city, setCity] = useState(null);\n    const [locstate, setLocState] = useState(null);\n    const [country, setCountry] = useState(null);\n    const [postal, setPostal] = useState(null);\n\n    useEffect(() => {\n        const fetchUserDetails = async() => {\n            setIsLoading(true);\n            setError(null);\n\n            try{\n                const response = await fetch(\"http://127.0.0.1:5000/userDetails/\" + String(id));\n                //something similar to await fetch to do post\n                //console.log(response);\n                if (!response.ok){\n                    throw new Error(\"failed to fetch details\");\n                }\n                const resp = await response.json();\n                const data = JSON.parse(JSON.stringify(resp));\n                //console.log(data);\n                setUsername(data[0].username);\n                setEmail(data[0].email);\n                setOrg(data[0].organization);\n                setAddress(data[0].address);\n                setCity(data[0].city);\n                setLocState(data[0].state);\n                setCountry(data[0].country);\n                setPostal(data[0].postalcode);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        if (id) {\n            fetchUserDetails();\n        }\n    }, [id]);\n\n\n    return (\n    <div>\n\n        <div class=\"inline_grid\">{username}</div>\n        <div class=\"inline_grid\">{email}</div>\n        <div class=\"inline_grid\">{org}</div>\n        <div class=\"inline_grid\">{address}</div>\n        <div class=\"inline_grid\">{city}</div>\n        <div class=\"inline_grid\">{locstate}</div>\n        <div class=\"inline_grid\">{country}</div>\n        <div class=\"inline_grid\">{postal}</div>\n\n    </div>\n    );\n}\n\n\nconst UserList = ({users}) => {\n    const [selectedUserId, setSelectedUserId] = useState(false);\n    const [rowData, setRowData] = useState(users);\n    const [editData, setEditData] = useState({});\n\n    const handleUserClick = (id) => {\n        if (selectedUserId && selectedUserId === id){\n            setSelectedUserId(null);\n        }\n        else{\n            setSelectedUserId(id);\n        }\n        console.log(selectedUserId);\n        console.log(id);\n    };\n\n    const getRows = () => {\n        return rowData.map((user) => {\n\n            return(\n            <div>\n                <div class=\"row_grid\">{!(selectedUserId === user.id) && <UserData id={user.id}/>}</div>\n                <div class=\"inline_grid\" onClick={() => {handleUserClick(user.id);}}>Edit {user.username} data</div>\n            </div>\n            );\n\n        });\n    }\n//<div class=\"inline_grid\" onClick={() => {handleUserClick(user.id);}}><button >Edit {user.username} data</button></div>\n    //.id or .username?\n    return(\n        <div>\n\n            <div class=\"inline_grid\">Username:</div>\n            <div class=\"inline_grid\">Email:</div>\n            <div class=\"inline_grid\">Organization:</div>\n            <div class=\"inline_grid\">Address:</div>\n            <div class=\"inline_grid\">City:</div>\n            <div class=\"inline_grid\">State:</div>\n            <div class=\"inline_grid\">Country:</div>\n            <div class=\"inline_grid\">Postal Code:</div>\n            <div class=\"inline_grid\">Edit:</div>\n        <div>\n            {getRows(users)}\n        </div>\n\n        </div>\n    );\n\n};\n\n\n//how to tell it that once adduser has been done, have to useeffect again....\n//should adduser be here?\n\n//needs to be able to change display if the database is updated\n// ^look smth up with this\n\nconst App = () => {\n    const [users, setUsers] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [userAdded, setUserAdded] = useState(false);\n    const [addUsr, setAddUsr] = useState(false);\n    console.log(\"adduser is \" + addUsr);\n\n    useEffect(() => {\n        const fetchUsers = async() => {\n            try{\n                const response = await fetch(\"http://127.0.0.1:5000/userlist\");\n\n                if (!response.ok) {\n                    throw new Error('failed to fetch users');\n                }\n                const data = await response.json();\n                console.log(data);\n                setUsers(data);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        if (userAdded){\n            setUserAdded(!userAdded);\n            fetchUsers();\n        }\n        fetchUsers();\n    }, [post]);\n\n\n    const AddNewUser = () => {\n        const [isLoading, setIsLoading] = useState(false);\n        const [error, setError] = useState(null);\n\n        const [user, setUser] = useState(null);\n        const [pass, setPass] = useState(null);\n        const [email, setEmail] = useState(null);\n        const [org, setOrg] = useState(null);\n        const [address, setAddress] = useState(null);\n        const [city, setCity] = useState(null);\n        const [locstate, setLocState] = useState(null);\n        const [country, setCountry] = useState(null);\n        const [postal, setPostal] = useState(null);\n\n        let userDetails = [\n            {username: {user}},\n            {password: {pass}},\n            {email: {email}},\n            {organization: {org}},\n            {address: {address}},\n            {city: {city}},\n            {state: {locstate}},\n            {country: {country}},\n            {postalcode: {postal}},\n        ];\n\n        //!!!\n\n        const handleSubmit = async(event) => {\n            console.log(\"submit pressed\");\n            setAddUsr(!addUsr);\n            console.log(\"adduser is \" + addUsr);\n            event.preventDefault();\n            const settings = {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    user,\n                    pass,\n                    email,\n                    org,\n                    address,\n                    city,\n                    locstate,\n                    country,\n                    postal,\n                }),\n            };\n            try{\n                const fetchResponse = await fetch('http://127.0.0.1:5000/addNewUser/', settings);\n                const data = await fetchResponse.json();\n                return data;\n            } catch (e){\n                return e;\n            }\n        }\n\n        if (isLoading) return <p>Loading...</p>;\n        if (error) return <p>Error: {error}</p>;\n\n        return(\n            <div>\n                <form method=\"post\" action=\"/post\" onSubmit={handleSubmit}>\n                    <div class=\"inline_grid\"><TextField id=\"user\" label=\"Username:\" onChange={(e)=>setUser(e.target.value)}/></div>\n                    <div class=\"inline_grid\"><TextField id=\"email\" label=\"Email:\" onChange={(e)=>setEmail(e.target.value)}/></div>\n                    <div class=\"inline_grid\"><TextField id=\"org\" label=\"Organization:\" onChange={(e)=>setOrg(e.target.value)}/></div>\n                    <div class=\"inline_grid\"><TextField id=\"address\" label=\"Address:\" onChange={(e)=>setAddress(e.target.value)}/></div>\n                    <div class=\"inline_grid\"><TextField id=\"city\" label=\"City:\" onChange={(e)=>setCity(e.target.value)}/></div>\n                    <div class=\"inline_grid\"><TextField id=\"locstate\" label=\"State:\" onChange={(e)=>setLocState(e.target.value)}/></div>\n                    <div class=\"inline_grid\"><TextField id=\"country\" label=\"Country:\" onChange={(e)=>setCountry(e.target.value)}/></div>\n                    <div class=\"inline_grid\"><TextField id=\"postal\" label=\"Postalcode:\" onChange={(e)=>setPostal(e.target.value)}/></div>\n                    <div class=\"inline_grid\"><input type=\"submit\" className=\"btn\" value=\"Update\"/></div>\n                </form>\n                </div>\n            );\n    }\n\n\n    const AddUser = () => {\n        const handleUserClick = () => {\n            if (addUsr === true){\n                setUserAdded(true);\n                console.log(\"adduser is \" + addUsr);\n            }\n            setAddUsr(!addUsr);\n            console.log(\"adduser is \" + addUsr);\n            //console.log(\"add user button pressed\");\n        }\n\n        return(\n        <div>\n            <button onClick={handleUserClick} type=\"button\">Add User</button>\n            {addUsr && <AddNewUser />}\n        </div>\n        );\n    }\n\n\n    if (isLoading) return <p>Loading...</p>\n    if (error) return <p>Error: {error}</p>;\n\n    return (\n        <div>\n        <AddUser />\n        <UserList users={users}/>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}