{"ast":null,"code":"var _jsxFileName = \"/home/work/Desktop/flask_work/true_userlist/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport \"./App.css\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SaveUserDetails = ({\n  id,\n  details\n}) => {\n  const handleSubmit = async event => {\n    event.preventDefault();\n    //alert('entered: ${email}');\n    //console.log(\"data is \" + JSON.stringify({data}));\n    //console.log(\"info type is \" + info_type);\n    console.log(JSON.stringify({\n      \"id\": id,\n      details\n    }));\n    const settings = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"id\": id,\n        details\n      })\n    };\n    try {\n      const fetchResponse = await fetch('http://127.0.0.1:5000/saveUserDetails/', settings);\n      const retdata = await fetchResponse.json();\n      return retdata;\n    } catch (e) {\n      return e;\n    }\n  };\n  return;\n};\n\n//<text field></> call onChange, update state variable\n_c = SaveUserDetails;\nconst UserDetails = ({\n  id\n}) => {\n  _s();\n  console.log(\"in UserDetails component: \" + id);\n  //const [userDetails, setUserDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [org, setOrg] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [city, setCity] = useState(null);\n  const [locstate, setLocState] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [postal, setPostal] = useState(null);\n  let userDetails = [{\n    username: {\n      username\n    }\n  }, {\n    email: {\n      email\n    }\n  }, {\n    organization: {\n      org\n    }\n  }, {\n    address: {\n      address\n    }\n  }, {\n    city: {\n      city\n    }\n  }, {\n    state: {\n      locstate\n    }\n  }, {\n    country: {\n      country\n    }\n  }, {\n    postalcode: {\n      postal\n    }\n  }];\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/userDetails/\" + String(id));\n        //something similar to await fetch to do post\n        //console.log(response);\n        if (!response.ok) {\n          throw new Error(\"failed to fetch details\");\n        }\n        const resp = await response.json();\n        const data = JSON.parse(JSON.stringify(resp));\n        //console.log(data);\n        setUsername(data[0].username);\n        setEmail(data[0].email);\n        setOrg(data[0].organization);\n        setAddress(data[0].address);\n        setCity(data[0].city);\n        setLocState(data[0].state);\n        setCountry(data[0].country);\n        setPostal(data[0].postalcode);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (id) {\n      fetchUserDetails();\n    }\n  }, [id]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 23\n  }, this);\n  if (!id) return null;\n  if (email) {\n    if (id) {\n      //console.log(id);\n      //console.log(userDetails);\n      console.log(\"email: \" + email);\n      //console.log(userDetails[0].password);\n      //state variables: email, organization, etc, initialize, fill in, will be changed as well\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"post\",\n          action: \"/post\",\n          onSubmit: SaveUserDetails(id, userDetails),\n          children: [\" //go back to separate, this should be onSubmit=(saveuserdetails)\", /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"email\",\n            children: [\"Email: \", email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"text\",\n            name: \"email\",\n            onChange: useEffect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"org\",\n            children: [\"Organization: \", org]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"org\",\n            type: \"text\",\n            name: \"org\",\n            onChange: useEffect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"address\",\n            children: [\"Address: \", address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"address\",\n            type: \"text\",\n            name: \"address\",\n            onChange: useEffect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"city\",\n            children: [\"City: \", city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"city\",\n            type: \"text\",\n            name: \"city\",\n            onChange: useEffect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"locstate\",\n            children: [\"State: \", locstate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"locstate\",\n            type: \"text\",\n            name: \"locstate\",\n            onChange: useEffect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"country\",\n            children: [\"Country: \", country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"country\",\n            type: \"text\",\n            name: \"country\",\n            onChange: useEffect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"postal\",\n            children: [\"Postalcode: \", postal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"postal\",\n            type: \"text\",\n            name: \"postal\",\n            onChange: useEffect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn\",\n            value: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 20\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click a user to display their details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 16\n    }, this);\n  }\n};\n_s(UserDetails, \"dSqwV5QGkEmSxB2P5ANNuKSRh7Y=\");\n_c2 = UserDetails;\nconst UserList = ({\n  users\n}) => {\n  _s2();\n  const [selectedUserId, setSelectedUserId] = useState(null); //usestate [] where it's objects?\n\n  const handleUserClick = id => {\n    if (selectedUserId && selectedUserId === id) {\n      setSelectedUserId(null);\n    } else {\n      setSelectedUserId(id);\n    }\n    console.log(selectedUserId);\n    console.log(id);\n  };\n\n  //.id or .username?\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"users_border\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => {\n            handleUserClick(user.id);\n          },\n          children: [\"Username: \", user.username]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"details_border\", {\n      children: selectedUserId && /*#__PURE__*/_jsxDEV(UserDetails, {\n        id: selectedUserId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n_s2(UserList, \"XgWC7K+UW7JnvJKTIvHgHgmCH6M=\");\n_c3 = UserList;\nconst App = () => {\n  _s3();\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/userlist\");\n        if (!response.ok) {\n          throw new Error('failed to fetch users');\n        }\n        const data = await response.json();\n        console.log(data);\n        setUsers(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchUsers();\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(UserList, {\n    users: users\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 12\n  }, this);\n};\n_s3(App, \"edfhi5CBIMNWZs0YdkHpH6QBUsU=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"SaveUserDetails\");\n$RefreshReg$(_c2, \"UserDetails\");\n$RefreshReg$(_c3, \"UserList\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","SaveUserDetails","id","details","handleSubmit","event","preventDefault","console","log","JSON","stringify","settings","method","headers","body","fetchResponse","fetch","retdata","json","e","_c","UserDetails","_s","isLoading","setIsLoading","error","setError","username","setUsername","email","setEmail","org","setOrg","address","setAddress","city","setCity","locstate","setLocState","country","setCountry","postal","setPostal","userDetails","organization","state","postalcode","fetchUserDetails","response","String","ok","Error","resp","data","parse","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","action","onSubmit","for","type","name","onChange","className","value","_c2","UserList","users","_s2","selectedUserId","setSelectedUserId","handleUserClick","map","user","onClick","_c3","App","_s3","setUsers","fetchUsers","_c4","$RefreshReg$"],"sources":["/home/work/Desktop/flask_work/true_userlist/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst SaveUserDetails = ({id, details}) => {\n\n    const handleSubmit = async(event) => {\n        event.preventDefault();\n        //alert('entered: ${email}');\n        //console.log(\"data is \" + JSON.stringify({data}));\n        //console.log(\"info type is \" + info_type);\n        console.log(JSON.stringify({\"id\": id, details}));\n        const settings = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"id\": id,\n                details,\n            }),\n        };\n        try{\n            const fetchResponse = await fetch('http://127.0.0.1:5000/saveUserDetails/', settings);\n            const retdata = await fetchResponse.json();\n            return retdata;\n        } catch (e){\n            return e;\n        }\n    };\n\n    return;\n};\n\n//<text field></> call onChange, update state variable\nconst UserDetails = ({id}) =>{\n    console.log(\"in UserDetails component: \" + id);\n    //const [userDetails, setUserDetails] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const [username, setUsername] = useState(null);\n    const [email, setEmail] = useState(null);\n    const [org, setOrg] = useState(null);\n    const [address, setAddress] = useState(null);\n    const [city, setCity] = useState(null);\n    const [locstate, setLocState] = useState(null);\n    const [country, setCountry] = useState(null);\n    const [postal, setPostal] = useState(null);\n\n    let userDetails = [\n        {username: {username}},\n        {email: {email}},\n        {organization: {org}},\n        {address: {address}},\n        {city: {city}},\n        {state: {locstate}},\n        {country: {country}},\n        {postalcode: {postal}},\n    ];\n\n    useEffect(() => {\n        const fetchUserDetails = async() => {\n            setIsLoading(true);\n            setError(null);\n\n            try{\n                const response = await fetch(\"http://127.0.0.1:5000/userDetails/\" + String(id));\n                //something similar to await fetch to do post\n                //console.log(response);\n                if (!response.ok){\n                    throw new Error(\"failed to fetch details\");\n                }\n                const resp = await response.json();\n                const data = JSON.parse(JSON.stringify(resp));\n                //console.log(data);\n                setUsername(data[0].username);\n                setEmail(data[0].email);\n                setOrg(data[0].organization);\n                setAddress(data[0].address);\n                setCity(data[0].city);\n                setLocState(data[0].state);\n                setCountry(data[0].country);\n                setPostal(data[0].postalcode);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        if (id) {\n            fetchUserDetails();\n        }\n    }, [id]);\n\n    if (isLoading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error}</p>;\n    if (!id) return null;\n\n    if (email){\n        if (id){\n            //console.log(id);\n            //console.log(userDetails);\n            console.log(\"email: \" + email);\n            //console.log(userDetails[0].password);\n            //state variables: email, organization, etc, initialize, fill in, will be changed as well\n            return(\n                <div>\n                <form method=\"post\" action=\"/post\" onSubmit={SaveUserDetails(id, userDetails)}> //go back to separate, this should be onSubmit=(saveuserdetails)\n                    <label for=\"email\">Email: {email}</label>\n                    <br/>\n                    <input id=\"email\" type=\"text\" name=\"email\" onChange={useEffect} />\n                    <br/>\n                    <br/>\n                    <label for=\"org\">Organization: {org}</label>\n                    <br/>\n                    <input id=\"org\" type=\"text\" name=\"org\" onChange={useEffect} />\n                    <br/>\n                    <br/>\n                    <label for=\"address\">Address: {address}</label>\n                    <br/>\n                    <input id=\"address\" type=\"text\" name=\"address\" onChange={useEffect} />\n                    <br/>\n                    <br/>\n                    <label for=\"city\">City: {city}</label>\n                    <br/>\n                    <input id=\"city\" type=\"text\" name=\"city\" onChange={useEffect} />\n                    <br/>\n                    <br/>\n                    <label for=\"locstate\">State: {locstate}</label>\n                    <br/>\n                    <input id=\"locstate\" type=\"text\" name=\"locstate\" onChange={useEffect} />\n                    <br/>\n                    <br/>\n                    <label for=\"country\">Country: {country}</label>\n                    <br/>\n                    <input id=\"country\" type=\"text\" name=\"country\" onChange={useEffect} />\n                    <br/>\n                    <br/>\n                    <label for=\"postal\">Postalcode: {postal}</label>\n                    <br/>\n                    <input id=\"postal\" type=\"text\" name=\"postal\" onChange={useEffect} />\n                    <br/>\n                    <br/>\n                    <input type=\"submit\" className=\"btn\" value=\"Update\"/>\n                </form>\n                </div>\n            );\n        }\n        else {\n            return <p></p>;\n        }\n    }\n    else {\n        return <p>Click a user to display their details.</p>;\n    }\n}\n\n\nconst UserList = ({users}) => {\n    const [selectedUserId, setSelectedUserId] = useState(null); //usestate [] where it's objects?\n\n    const handleUserClick = (id) => {\n        if (selectedUserId && selectedUserId === id){\n            setSelectedUserId(null);\n        }\n        else{\n            setSelectedUserId(id);\n\n        }\n        console.log(selectedUserId);\n        console.log(id);\n    };\n\n\n    //.id or .username?\n    return(\n        <div>\n        <users_border>\n        <ul>\n            {users.map((user) => (\n            <li key={user.id} onClick={() => {handleUserClick(user.id);}}>\n                Username: {user.username}\n            </li>\n            ))}\n        </ul>\n        </users_border>\n        <details_border>\n        {selectedUserId && <UserDetails id={selectedUserId}/>}\n        </details_border>\n        </div>\n    );\n\n};\n\n\nconst App = () => {\n    const [users, setUsers] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchUsers = async() => {\n            try{\n                const response = await fetch(\"http://127.0.0.1:5000/userlist\");\n\n                if (!response.ok) {\n                    throw new Error('failed to fetch users');\n                }\n                const data = await response.json();\n                console.log(data);\n                setUsers(data);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchUsers();\n    }, []);\n\n\n    if (isLoading) return <p>Loading...</p>\n    if (error) return <p>Error: {error}</p>;\n\n    return <UserList users={users}/>;\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}