{"ast":null,"code":"var _jsxFileName = \"/home/work/Desktop/flask_work/true_userlist/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport \"./App.css\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TextField from '@mui/material/TextField';\n\n//<text field></> call onChange, update state variable\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDetails = ({\n  id\n}) => {\n  _s();\n  console.log(\"in UserDetails component: \" + id);\n  //const [userDetails, setUserDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [org, setOrg] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [city, setCity] = useState(null);\n  const [locstate, setLocState] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [postal, setPostal] = useState(null);\n  let userDetails = [{\n    username: {\n      username\n    }\n  }, {\n    email: {\n      email\n    }\n  }, {\n    organization: {\n      org\n    }\n  }, {\n    address: {\n      address\n    }\n  }, {\n    city: {\n      city\n    }\n  }, {\n    state: {\n      locstate\n    }\n  }, {\n    country: {\n      country\n    }\n  }, {\n    postalcode: {\n      postal\n    }\n  }];\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/userDetails/\" + String(id));\n        //something similar to await fetch to do post\n        //console.log(response);\n        if (!response.ok) {\n          throw new Error(\"failed to fetch details\");\n        }\n        const resp = await response.json();\n        const data = JSON.parse(JSON.stringify(resp));\n        //console.log(data);\n        setUsername(data[0].username);\n        setEmail(data[0].email);\n        setOrg(data[0].organization);\n        setAddress(data[0].address);\n        setCity(data[0].city);\n        setLocState(data[0].state);\n        setCountry(data[0].country);\n        setPostal(data[0].postalcode);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (id) {\n      fetchUserDetails();\n    }\n  }, [id]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const settings = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"id\": id,\n        username,\n        email,\n        org,\n        address,\n        city,\n        locstate,\n        country,\n        postal\n      })\n    };\n    try {\n      const fetchResponse = await fetch('http://127.0.0.1:5000/saveUserDetails/', settings);\n      const data = await fetchResponse.json();\n      return data;\n    } catch (e) {\n      return e;\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 23\n  }, this);\n  if (!id) return null;\n  if (email) {\n    if (id) {\n      //console.log(id);\n      //console.log(userDetails);\n      console.log(\"email: \" + email);\n      //console.log(userDetails[0].password);\n      //state variables: email, organization, etc, initialize, fill in, will be changed as well\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"post\",\n          action: \"/post\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            label: \"Email:\",\n            defaultValue: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"org\",\n            label: \"Organization:\",\n            defaultValue: org,\n            onChange: e => setOrg(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"address\",\n            label: \"Address:\",\n            defaultValue: address,\n            onChange: e => setAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"city\",\n            label: \"City:\",\n            defaultValue: city,\n            onChange: e => setCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"locstate\",\n            label: \"State:\",\n            defaultValue: locstate,\n            onChange: e => setLocState(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"country\",\n            label: \"Country:\",\n            defaultValue: country,\n            onChange: e => setCountry(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"postal\",\n            label: \"Postalcode:\",\n            defaultValue: postal,\n            onChange: e => setPostal(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn\",\n            value: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 20\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click a user to display their details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 16\n    }, this);\n  }\n};\n_s(UserDetails, \"dSqwV5QGkEmSxB2P5ANNuKSRh7Y=\");\n_c = UserDetails;\nconst UserList = ({\n  users\n}) => {\n  _s2();\n  const [selectedUserId, setSelectedUserId] = useState(null); //usestate [] where it's objects?\n\n  const handleUserClick = id => {\n    if (selectedUserId && selectedUserId === id) {\n      setSelectedUserId(null);\n    } else {\n      setSelectedUserId(id);\n    }\n    console.log(selectedUserId);\n    console.log(id);\n  };\n\n  //.id or .username?\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Organization:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"State:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Country:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Postal Code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Edit:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.organization\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.postalcode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          onClick: () => {\n            handleUserClick(user.id);\n          },\n          children: [\"Edit \", user.username, \" data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n_s2(UserList, \"XgWC7K+UW7JnvJKTIvHgHgmCH6M=\");\n_c2 = UserList;\nconst AddUser = () => {\n  const handleUserClick = () => {\n    console.log(\"add user button pressed\");\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleUserClick,\n    title: \"Add User\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 13\n  }, this);\n};\n_c3 = AddUser;\nconst App = () => {\n  _s3();\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/userlist\");\n        if (!response.ok) {\n          throw new Error('failed to fetch users');\n        }\n        const data = await response.json();\n        console.log(data);\n        setUsers(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchUsers();\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n};\n_s3(App, \"edfhi5CBIMNWZs0YdkHpH6QBUsU=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"UserDetails\");\n$RefreshReg$(_c2, \"UserList\");\n$RefreshReg$(_c3, \"AddUser\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","TextField","jsxDEV","_jsxDEV","UserDetails","id","_s","console","log","isLoading","setIsLoading","error","setError","username","setUsername","email","setEmail","org","setOrg","address","setAddress","city","setCity","locstate","setLocState","country","setCountry","postal","setPostal","userDetails","organization","state","postalcode","fetchUserDetails","response","fetch","String","ok","Error","resp","json","data","JSON","parse","stringify","err","message","handleSubmit","event","preventDefault","settings","method","headers","body","fetchResponse","e","children","fileName","_jsxFileName","lineNumber","columnNumber","action","onSubmit","label","defaultValue","onChange","target","value","type","className","_c","UserList","users","_s2","selectedUserId","setSelectedUserId","handleUserClick","scope","map","user","onClick","_c2","AddUser","Button","title","_c3","App","_s3","setUsers","fetchUsers","_c4","$RefreshReg$"],"sources":["/home/work/Desktop/flask_work/true_userlist/src/App.js"],"sourcesContent":["import \"./App.css\"\nimport React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport TextField from '@mui/material/TextField';\n\n//<text field></> call onChange, update state variable\nconst UserDetails = ({id}) =>{\n    console.log(\"in UserDetails component: \" + id);\n    //const [userDetails, setUserDetails] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const [username, setUsername] = useState(null);\n    const [email, setEmail] = useState(null);\n    const [org, setOrg] = useState(null);\n    const [address, setAddress] = useState(null);\n    const [city, setCity] = useState(null);\n    const [locstate, setLocState] = useState(null);\n    const [country, setCountry] = useState(null);\n    const [postal, setPostal] = useState(null);\n\n    let userDetails = [\n        {username: {username}},\n        {email: {email}},\n        {organization: {org}},\n        {address: {address}},\n        {city: {city}},\n        {state: {locstate}},\n        {country: {country}},\n        {postalcode: {postal}},\n    ];\n\n    useEffect(() => {\n        const fetchUserDetails = async() => {\n            setIsLoading(true);\n            setError(null);\n\n            try{\n                const response = await fetch(\"http://127.0.0.1:5000/userDetails/\" + String(id));\n                //something similar to await fetch to do post\n                //console.log(response);\n                if (!response.ok){\n                    throw new Error(\"failed to fetch details\");\n                }\n                const resp = await response.json();\n                const data = JSON.parse(JSON.stringify(resp));\n                //console.log(data);\n                setUsername(data[0].username);\n                setEmail(data[0].email);\n                setOrg(data[0].organization);\n                setAddress(data[0].address);\n                setCity(data[0].city);\n                setLocState(data[0].state);\n                setCountry(data[0].country);\n                setPostal(data[0].postalcode);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        if (id) {\n            fetchUserDetails();\n        }\n    }, [id]);\n\n    const handleSubmit = async(event) => {\n        event.preventDefault();\n        const settings = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"id\": id,\n                username,\n                email,\n                org,\n                address,\n                city,\n                locstate,\n                country,\n                postal,\n            }),\n        };\n        try{\n            const fetchResponse = await fetch('http://127.0.0.1:5000/saveUserDetails/', settings);\n            const data = await fetchResponse.json();\n            return data;\n        } catch (e){\n            return e;\n        }\n    }\n\n    if (isLoading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error}</p>;\n    if (!id) return null;\n\n    if (email){\n        if (id){\n            //console.log(id);\n            //console.log(userDetails);\n            console.log(\"email: \" + email);\n            //console.log(userDetails[0].password);\n            //state variables: email, organization, etc, initialize, fill in, will be changed as well\n            return(\n                <div>\n                <form method=\"post\" action=\"/post\" onSubmit={handleSubmit}>\n                    <TextField id=\"email\" label=\"Email:\" defaultValue={email} onChange={(e)=>setEmail(e.target.value)}/>\n                    <TextField id=\"org\" label=\"Organization:\" defaultValue={org} onChange={(e)=>setOrg(e.target.value)}/>\n                    <TextField id=\"address\" label=\"Address:\" defaultValue={address} onChange={(e)=>setAddress(e.target.value)}/>\n                    <TextField id=\"city\" label=\"City:\" defaultValue={city} onChange={(e)=>setCity(e.target.value)}/>\n                    <TextField id=\"locstate\" label=\"State:\" defaultValue={locstate} onChange={(e)=>setLocState(e.target.value)}/>\n                    <TextField id=\"country\" label=\"Country:\" defaultValue={country} onChange={(e)=>setCountry(e.target.value)}/>\n                    <TextField id=\"postal\" label=\"Postalcode:\" defaultValue={postal} onChange={(e)=>setPostal(e.target.value)}/>\n                    <input type=\"submit\" className=\"btn\" value=\"Update\"/>\n                </form>\n                </div>\n            );\n        }\n        else {\n            return <p></p>;\n        }\n    }\n    else {\n        return <p>Click a user to display their details.</p>;\n    }\n}\n\n\nconst UserList = ({users}) => {\n    const [selectedUserId, setSelectedUserId] = useState(null); //usestate [] where it's objects?\n\n    const handleUserClick = (id) => {\n        if (selectedUserId && selectedUserId === id){\n            setSelectedUserId(null);\n        }\n        else{\n            setSelectedUserId(id);\n\n        }\n        console.log(selectedUserId);\n        console.log(id);\n    };\n\n    //.id or .username?\n    return(\n        <div>\n        <table>\n        <thead>\n            <tr>\n                <th scope=\"col\">Username:</th>\n                <th scope=\"col\">Email:</th>\n                <th scope=\"col\">Organization:</th>\n                <th scope=\"col\">Address:</th>\n                <th scope=\"col\">City:</th>\n                <th scope=\"col\">State:</th>\n                <th scope=\"col\">Country:</th>\n                <th scope=\"col\">Postal Code:</th>\n                <th scope=\"col\">Edit:</th>\n            </tr>\n        </thead>\n        <tbody>\n        </tbody>\n\n            {users.map((user) => (\n                <tr>\n                    <td>{user.username}</td>\n                    <td>{user.email}</td>\n                    <td>{user.organization}</td>\n                    <td>{user.address}</td>\n                    <td>{user.city}</td>\n                    <td>{user.state}</td>\n                    <td>{user.country}</td>\n                    <td>{user.postalcode}</td>\n                    <td onClick={() => {handleUserClick(user.id);}}>Edit {user.username} data</td>\n                </tr>\n            ))}\n        </table>\n        </div>\n    );\n\n};\n\n\nconst AddUser = () => {\n\n    const handleUserClick = () => {\n        console.log(\"add user button pressed\");\n    }\n\n    return( <Button onClick={handleUserClick} title=\"Add User\"/>);\n}\n\n\nconst App = () => {\n    const [users, setUsers] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchUsers = async() => {\n            try{\n                const response = await fetch(\"http://127.0.0.1:5000/userlist\");\n\n                if (!response.ok) {\n                    throw new Error('failed to fetch users');\n                }\n                const data = await response.json();\n                console.log(data);\n                setUsers(data);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchUsers();\n    }, []);\n\n\n    if (isLoading) return <p>Loading...</p>\n    if (error) return <p>Error: {error}</p>;\n\n    return (\n        <div>\n        <AddUser />\n        <UserList users={users}/>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;;;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAE,CAAC,KAAI;EAAAC,EAAA;EACzBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,GAAGH,EAAE,CAAC;EAC9C;EACA,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,GAAG,EAAEC,MAAM,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsB,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC4B,MAAM,EAAEC,SAAS,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAE1C,IAAI8B,WAAW,GAAG,CACd;IAAChB,QAAQ,EAAE;MAACA;IAAQ;EAAC,CAAC,EACtB;IAACE,KAAK,EAAE;MAACA;IAAK;EAAC,CAAC,EAChB;IAACe,YAAY,EAAE;MAACb;IAAG;EAAC,CAAC,EACrB;IAACE,OAAO,EAAE;MAACA;IAAO;EAAC,CAAC,EACpB;IAACE,IAAI,EAAE;MAACA;IAAI;EAAC,CAAC,EACd;IAACU,KAAK,EAAE;MAACR;IAAQ;EAAC,CAAC,EACnB;IAACE,OAAO,EAAE;MAACA;IAAO;EAAC,CAAC,EACpB;IAACO,UAAU,EAAE;MAACL;IAAM;EAAC,CAAC,CACzB;EAED7B,SAAS,CAAC,MAAM;IACZ,MAAMmC,gBAAgB,GAAG,MAAAA,CAAA,KAAW;MAChCvB,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAG;QACC,MAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,GAAGC,MAAM,CAAC/B,EAAE,CAAC,CAAC;QAC/E;QACA;QACA,IAAI,CAAC6B,QAAQ,CAACG,EAAE,EAAC;UACb,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;QAC9C;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACL,IAAI,CAAC,CAAC;QAC7C;QACAzB,WAAW,CAAC2B,IAAI,CAAC,CAAC,CAAC,CAAC5B,QAAQ,CAAC;QAC7BG,QAAQ,CAACyB,IAAI,CAAC,CAAC,CAAC,CAAC1B,KAAK,CAAC;QACvBG,MAAM,CAACuB,IAAI,CAAC,CAAC,CAAC,CAACX,YAAY,CAAC;QAC5BV,UAAU,CAACqB,IAAI,CAAC,CAAC,CAAC,CAACtB,OAAO,CAAC;QAC3BG,OAAO,CAACmB,IAAI,CAAC,CAAC,CAAC,CAACpB,IAAI,CAAC;QACrBG,WAAW,CAACiB,IAAI,CAAC,CAAC,CAAC,CAACV,KAAK,CAAC;QAC1BL,UAAU,CAACe,IAAI,CAAC,CAAC,CAAC,CAAChB,OAAO,CAAC;QAC3BG,SAAS,CAACa,IAAI,CAAC,CAAC,CAAC,CAACT,UAAU,CAAC;MACjC,CAAC,CAAC,OAAOa,GAAG,EAAE;QACVjC,QAAQ,CAACiC,GAAG,CAACC,OAAO,CAAC;MACzB,CAAC,SAAS;QACNpC,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAED,IAAIL,EAAE,EAAE;MACJ4B,gBAAgB,CAAC,CAAC;IACtB;EACJ,CAAC,EAAE,CAAC5B,EAAE,CAAC,CAAC;EAER,MAAM0C,YAAY,GAAG,MAAMC,KAAK,IAAK;IACjCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG;MACbC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEX,IAAI,CAACE,SAAS,CAAC;QACjB,IAAI,EAAEvC,EAAE;QACRQ,QAAQ;QACRE,KAAK;QACLE,GAAG;QACHE,OAAO;QACPE,IAAI;QACJE,QAAQ;QACRE,OAAO;QACPE;MACJ,CAAC;IACL,CAAC;IACD,IAAG;MACC,MAAM2B,aAAa,GAAG,MAAMnB,KAAK,CAAC,wCAAwC,EAAEe,QAAQ,CAAC;MACrF,MAAMT,IAAI,GAAG,MAAMa,aAAa,CAACd,IAAI,CAAC,CAAC;MACvC,OAAOC,IAAI;IACf,CAAC,CAAC,OAAOc,CAAC,EAAC;MACP,OAAOA,CAAC;IACZ;EACJ,CAAC;EAED,IAAI9C,SAAS,EAAE,oBAAON,OAAA;IAAAqD,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACvC,IAAIjD,KAAK,EAAE,oBAAOR,OAAA;IAAAqD,QAAA,GAAG,SAAO,EAAC7C,KAAK;EAAA;IAAA8C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EACvC,IAAI,CAACvD,EAAE,EAAE,OAAO,IAAI;EAEpB,IAAIU,KAAK,EAAC;IACN,IAAIV,EAAE,EAAC;MACH;MACA;MACAE,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGO,KAAK,CAAC;MAC9B;MACA;MACA,oBACIZ,OAAA;QAAAqD,QAAA,eACArD,OAAA;UAAMgD,MAAM,EAAC,MAAM;UAACU,MAAM,EAAC,OAAO;UAACC,QAAQ,EAAEf,YAAa;UAAAS,QAAA,gBACtDrD,OAAA,CAACF,SAAS;YAACI,EAAE,EAAC,OAAO;YAAC0D,KAAK,EAAC,QAAQ;YAACC,YAAY,EAAEjD,KAAM;YAACkD,QAAQ,EAAGV,CAAC,IAAGvC,QAAQ,CAACuC,CAAC,CAACW,MAAM,CAACC,KAAK;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACpGzD,OAAA,CAACF,SAAS;YAACI,EAAE,EAAC,KAAK;YAAC0D,KAAK,EAAC,eAAe;YAACC,YAAY,EAAE/C,GAAI;YAACgD,QAAQ,EAAGV,CAAC,IAAGrC,MAAM,CAACqC,CAAC,CAACW,MAAM,CAACC,KAAK;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACrGzD,OAAA,CAACF,SAAS;YAACI,EAAE,EAAC,SAAS;YAAC0D,KAAK,EAAC,UAAU;YAACC,YAAY,EAAE7C,OAAQ;YAAC8C,QAAQ,EAAGV,CAAC,IAAGnC,UAAU,CAACmC,CAAC,CAACW,MAAM,CAACC,KAAK;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC5GzD,OAAA,CAACF,SAAS;YAACI,EAAE,EAAC,MAAM;YAAC0D,KAAK,EAAC,OAAO;YAACC,YAAY,EAAE3C,IAAK;YAAC4C,QAAQ,EAAGV,CAAC,IAAGjC,OAAO,CAACiC,CAAC,CAACW,MAAM,CAACC,KAAK;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAChGzD,OAAA,CAACF,SAAS;YAACI,EAAE,EAAC,UAAU;YAAC0D,KAAK,EAAC,QAAQ;YAACC,YAAY,EAAEzC,QAAS;YAAC0C,QAAQ,EAAGV,CAAC,IAAG/B,WAAW,CAAC+B,CAAC,CAACW,MAAM,CAACC,KAAK;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC7GzD,OAAA,CAACF,SAAS;YAACI,EAAE,EAAC,SAAS;YAAC0D,KAAK,EAAC,UAAU;YAACC,YAAY,EAAEvC,OAAQ;YAACwC,QAAQ,EAAGV,CAAC,IAAG7B,UAAU,CAAC6B,CAAC,CAACW,MAAM,CAACC,KAAK;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC5GzD,OAAA,CAACF,SAAS;YAACI,EAAE,EAAC,QAAQ;YAAC0D,KAAK,EAAC,aAAa;YAACC,YAAY,EAAErC,MAAO;YAACsC,QAAQ,EAAGV,CAAC,IAAG3B,SAAS,CAAC2B,CAAC,CAACW,MAAM,CAACC,KAAK;UAAE;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC5GzD,OAAA;YAAOiE,IAAI,EAAC,QAAQ;YAACC,SAAS,EAAC,KAAK;YAACF,KAAK,EAAC;UAAQ;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAEd,CAAC,MACI;MACD,oBAAOzD,OAAA;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAClB;EACJ,CAAC,MACI;IACD,oBAAOzD,OAAA;MAAAqD,QAAA,EAAG;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACxD;AACJ,CAAC;AAAAtD,EAAA,CA3HKF,WAAW;AAAAkE,EAAA,GAAXlE,WAAW;AA8HjB,MAAMmE,QAAQ,GAAGA,CAAC;EAACC;AAAK,CAAC,KAAK;EAAAC,GAAA;EAC1B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG5E,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5D,MAAM6E,eAAe,GAAIvE,EAAE,IAAK;IAC5B,IAAIqE,cAAc,IAAIA,cAAc,KAAKrE,EAAE,EAAC;MACxCsE,iBAAiB,CAAC,IAAI,CAAC;IAC3B,CAAC,MACG;MACAA,iBAAiB,CAACtE,EAAE,CAAC;IAEzB;IACAE,OAAO,CAACC,GAAG,CAACkE,cAAc,CAAC;IAC3BnE,OAAO,CAACC,GAAG,CAACH,EAAE,CAAC;EACnB,CAAC;;EAED;EACA,oBACIF,OAAA;IAAAqD,QAAA,eACArD,OAAA;MAAAqD,QAAA,gBACArD,OAAA;QAAAqD,QAAA,eACIrD,OAAA;UAAAqD,QAAA,gBACIrD,OAAA;YAAI0E,KAAK,EAAC,KAAK;YAAArB,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9BzD,OAAA;YAAI0E,KAAK,EAAC,KAAK;YAAArB,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BzD,OAAA;YAAI0E,KAAK,EAAC,KAAK;YAAArB,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClCzD,OAAA;YAAI0E,KAAK,EAAC,KAAK;YAAArB,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BzD,OAAA;YAAI0E,KAAK,EAAC,KAAK;YAAArB,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1BzD,OAAA;YAAI0E,KAAK,EAAC,KAAK;YAAArB,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BzD,OAAA;YAAI0E,KAAK,EAAC,KAAK;YAAArB,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7BzD,OAAA;YAAI0E,KAAK,EAAC,KAAK;YAAArB,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjCzD,OAAA;YAAI0E,KAAK,EAAC,KAAK;YAAArB,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRzD,OAAA;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,EAEHY,KAAK,CAACM,GAAG,CAAEC,IAAI,iBACZ5E,OAAA;QAAAqD,QAAA,gBACIrD,OAAA;UAAAqD,QAAA,EAAKuB,IAAI,CAAClE;QAAQ;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBzD,OAAA;UAAAqD,QAAA,EAAKuB,IAAI,CAAChE;QAAK;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBzD,OAAA;UAAAqD,QAAA,EAAKuB,IAAI,CAACjD;QAAY;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5BzD,OAAA;UAAAqD,QAAA,EAAKuB,IAAI,CAAC5D;QAAO;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBzD,OAAA;UAAAqD,QAAA,EAAKuB,IAAI,CAAC1D;QAAI;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBzD,OAAA;UAAAqD,QAAA,EAAKuB,IAAI,CAAChD;QAAK;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBzD,OAAA;UAAAqD,QAAA,EAAKuB,IAAI,CAACtD;QAAO;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBzD,OAAA;UAAAqD,QAAA,EAAKuB,IAAI,CAAC/C;QAAU;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1BzD,OAAA;UAAI6E,OAAO,EAAEA,CAAA,KAAM;YAACJ,eAAe,CAACG,IAAI,CAAC1E,EAAE,CAAC;UAAC,CAAE;UAAAmD,QAAA,GAAC,OAAK,EAACuB,IAAI,CAAClE,QAAQ,EAAC,OAAK;QAAA;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGd,CAAC;AAACa,GAAA,CApDIF,QAAQ;AAAAU,GAAA,GAARV,QAAQ;AAuDd,MAAMW,OAAO,GAAGA,CAAA,KAAM;EAElB,MAAMN,eAAe,GAAGA,CAAA,KAAM;IAC1BrE,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EAC1C,CAAC;EAED,oBAAQL,OAAA,CAACgF,MAAM;IAACH,OAAO,EAAEJ,eAAgB;IAACQ,KAAK,EAAC;EAAU;IAAA3B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAChE,CAAC;AAAAyB,GAAA,GAPKH,OAAO;AAUb,MAAMI,GAAG,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACd,MAAM,CAACf,KAAK,EAAEgB,QAAQ,CAAC,GAAGzF,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAM2F,UAAU,GAAG,MAAAA,CAAA,KAAW;MAC1B,IAAG;QACC,MAAMvD,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;QAE9D,IAAI,CAACD,QAAQ,CAACG,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC5C;QACA,MAAMG,IAAI,GAAG,MAAMP,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCjC,OAAO,CAACC,GAAG,CAACiC,IAAI,CAAC;QACjB+C,QAAQ,CAAC/C,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOI,GAAG,EAAE;QACVjC,QAAQ,CAACiC,GAAG,CAACC,OAAO,CAAC;MACzB,CAAC,SAAS;QACNpC,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAED+E,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAGN,IAAIhF,SAAS,EAAE,oBAAON,OAAA;IAAAqD,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACvC,IAAIjD,KAAK,EAAE,oBAAOR,OAAA;IAAAqD,QAAA,GAAG,SAAO,EAAC7C,KAAK;EAAA;IAAA8C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEvC,oBACIzD,OAAA;IAAAqD,QAAA,gBACArD,OAAA,CAAC+E,OAAO;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXzD,OAAA,CAACoE,QAAQ;MAACC,KAAK,EAAEA;IAAM;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEd,CAAC;AAAC2B,GAAA,CApCID,GAAG;AAAAI,GAAA,GAAHJ,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAAhB,EAAA,EAAAW,GAAA,EAAAI,GAAA,EAAAK,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAV,GAAA;AAAAU,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}